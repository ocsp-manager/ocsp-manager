# https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#github-context
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idif
# https://github.community/t/how-to-get-just-the-tag-name/16241/10

name: CI

on:
  push:
    tags:
      - "v*"
    branches:
      - master
      - main
      - next

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: source info
        id: source_info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - uses: actions/checkout@v3

      - name: build prep
        id: build_prep
        run: |
          git config --global --add safe.directory /app

      - name: application build
        uses: php-actions/composer@v6
        with:
          php_version: "8.2"
          php_extensions: pcntl bz2 bcmath
          command: buildphar

      - name: create release
        id: create_release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload release asset
        id: upload-release-asset
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./releases/ocsp-manager-${{ steps.source_info.outputs.SOURCE_TAG }}.phar
          asset_name: ocsp-manager-${{ steps.source_info.outputs.SOURCE_TAG }}.phar
          asset_content_type: application/zip

      - name: docker build
        run: |
          export ARCH=$([ $(uname -m) = "x86_64" ] && echo "amd64" || echo "arm64")
          mkdir -p ~/.docker/cli-plugins/
          wget -qO ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-${ARCH}
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker info
          docker buildx version
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name xbuilder --use
          docker buildx inspect --bootstrap
          .github/bin/docker-release.sh

        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
          DOCKER_CLI_EXPERIMENTAL: enabled
          #DOCKER_BUILD_PLATFORM: linux/amd64,linux/arm/v7,linux/arm64
          DOCKER_BUILD_PLATFORM: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x

